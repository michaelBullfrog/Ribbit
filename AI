from flask import Flask, request
import requests
import openai

# Replace with your tokens
WEBEX_BOT_TOKEN = 'MTQ5MDNhYTYtNGVjMC00OGQ2LTk4Y2ItNjZiZGNmMTk2NGRhYmE0MmJhZWUtMDI4_PF84_7726209c-42bf-4dd2-a7ed-6f1139040882N'
OPENAI_API_KEY = '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'

app = Flask(__name__)
openai.api_key = OPENAI_API_KEY

# Get message content from Webex
def get_message_text(message_id):
    url = f"https://webexapis.com/v1/messages/{message_id}"
    headers = {"Authorization": f"Bearer {WEBEX_BOT_TOKEN}"}
    response = requests.get(url, headers=headers)
    return response.json().get("text"), response.json().get("roomId")

# Send a message back to Webex space
def send_webex_message(room_id, text):
    url = "https://webexapis.com/v1/messages"
    headers = {
        "Authorization": f"Bearer {WEBEX_BOT_TOKEN}",
        "Content-Type": "application/json"
    }
    data = {"roomId": room_id, "text": text}
    requests.post(url, headers=headers, json=data)

@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.json
    if "data" in data and "id" in data["data"]:
        message_id = data["data"]["id"]

        # Prevent bot from replying to itself
        person_id = data["data"].get("personId")
        if person_id:
            bot_id = get_bot_person_id()
            if person_id == bot_id:
                return "Bot message ignored", 200

        user_message, room_id = get_message_text(message_id)

        # Remove bot mention from message
        bot_mention = f"<@personId:{bot_id}>"
        cleaned_message = user_message.replace(bot_mention, "").strip()

        # Get AI response
        ai_response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": cleaned_message}]
        )
        reply_text = ai_response.choices[0].message["content"]

        # Send reply
        send_webex_message(room_id, reply_text)

    return "OK", 200

# Get bot's own personId to avoid self-reply
def get_bot_person_id():
    url = "https://webexapis.com/v1/people/me"
    headers = {"Authorization": f"Bearer {WEBEX_BOT_TOKEN}"}
    response = requests.get(url, headers=headers)
    return response.json().get("id")

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
